<Application x:Class="TaskSchedulingApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TaskSchedulingApp"
             Startup="Application_Startup" Exit="Application_Exit">
    <Application.Resources>

        <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="PasswordBox">
                        <Border BorderThickness="1"
                      BorderBrush="{TemplateBinding Border.BorderBrush}"
                      Background="{TemplateBinding Background}"
                      Name="border" CornerRadius="5"
                      SnapsToDevicePixels="True">
                            <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                               VerticalScrollBarVisibility="Hidden"
                               Name="PART_ContentHost"
                               Focusable="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="UIElement.Opacity" TargetName="border"
                        Value="0.56"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Border.BorderBrush" TargetName="border" 
                        Value="#34495E"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <Setter Property="Border.BorderBrush" TargetName="border" 
                       Value="#34495E"/>

                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>
        <Style x:Key="RoundButtonTemplate" TargetType="Button">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsKeyboardFocused" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#1c73a8" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                </MultiTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1c73a8" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>

            </Style.Triggers>
            <Setter Property="Background" Value="#00416a"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>



        </Style>
        <Style x:Key="RoundTextBoxStyle" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="TextBox">
                        <Border BorderThickness="1"
                      BorderBrush="{TemplateBinding Border.BorderBrush}"
                      Background="{TemplateBinding Background}"
                      Name="border" CornerRadius="5"
                      SnapsToDevicePixels="True">
                            <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                               VerticalScrollBarVisibility="Hidden"
                               Name="PART_ContentHost"
                               Focusable="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="UIElement.Opacity" TargetName="border"
                        Value="0.56"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Border.BorderBrush" TargetName="border" 
                        Value="#34495E"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <Setter Property="Border.BorderBrush" TargetName="border" 
                       Value="#34495E"/>

                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>
        <Style x:Key="RounddateTemplate" TargetType="CheckBox">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#00416a" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="1" />
                    <!--<Setter Property="Foreground" Value="Blue" />-->
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="#00416a"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate 
         TargetType="{x:Type CheckBox}">

                        <Border BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}"
      Background="{TemplateBinding Background}">

                            <Grid>
                                <!-- ContentPresenter displays content of CheckBox -->
                                <ContentPresenter
        Content="{TemplateBinding Content}"
        ContentTemplate="{TemplateBinding ContentTemplate}"
        Margin="{TemplateBinding Padding}"
        HorizontalAlignment="{TemplateBinding 
                    HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding
                    VerticalContentAlignment}" />

                                <!-- This Border displays a semi-transparent red X -->
                                <Border>
                                    <Border.Background>
                                        <VisualBrush Opacity="0.5">
                                            <VisualBrush.Visual>
                                                <Path Name="path"
                 Data="M 0 0 L 10 10 M 10 0 L 0 10"
                 Stroke="Red" 
                 StrokeStartLineCap="Round"
                 StrokeEndLineCap="Round"
                 StrokeLineJoin="Round" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>



        </Style>
        <Style x:Key="Body_Content_DataGrid_Centering"
        TargetType="{x:Type DataGridCell}">
            <Setter Property="Height" Value="28" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Blue" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,5,5,5"/>
            <!--<Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="#00416a" />
                </Trigger>
            </Style.Triggers>-->
        </Style>
        <Style
    x:Key="HoverButton"
    TargetType="Button">
            <Setter
        Property="Template">
                <Setter.Value>
                    <ControlTemplate
                TargetType="Button">
                        <TextBlock
                    >
                <ContentPresenter /></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter
        Property="Foreground"
        Value="#00416a" />
            <Style.Triggers>
                <Trigger
            Property="IsMouseOver"
            Value="true">
                    <Setter
                Property="Foreground"
                Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
    x:Key="LinkButton"
    TargetType="Button">
            <Setter
        Property="Template">
                <Setter.Value>
                    <ControlTemplate
                TargetType="Button">
                        <TextBlock
                    >
                <ContentPresenter /></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter
        Property="Foreground"
        Value="#0B0080" />
            <Style.Triggers>
                <Trigger
            Property="IsMouseOver"
            Value="true">
                    <Setter
                Property="Foreground"
                Value="#CC2200 " />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RoundButtonTaskListStatus" TargetType="Button">
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,5,5,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="6" Background="{TemplateBinding Background}"
                                BorderThickness="0" BorderBrush="Blue">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

                <!--<Trigger Property="IsMouseOver" Value="True">
                    -->
                <!--<Setter Property="Background" Value="#97001b" />-->
                <!--
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="1" />
                    -->
                <!--<Setter Property="Foreground" Value="Blue" />-->
                <!--
                </Trigger>-->

                <DataTrigger Binding="{Binding State}" Value="Ready">
                    <Setter Property="Background" Value="#00416a"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding State}" Value="Disabled">
                    <Setter Property="Background" Value="#d165c8"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding State}" Value="Queued">
                    <Setter Property="Background" Value="#0fbf15"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding State}" Value="Running">
                    <Setter Property="Background" Value="#826a7e"></Setter>
                </DataTrigger>
            </Style.Triggers>


        </Style>

        <Style x:Key="RoundComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="5" Background="#00416a" BorderBrush="#00416a" BorderThickness="1" />
                                        <Border Grid.Column="0" CornerRadius="5,0,0,5"  Margin="1"  Background="White"  BorderBrush="#00416a" BorderThickness="0,0,1,0" />
                                        <Path x:Name="Arrow" Grid.Column="1"  Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" VerticalAlignment="Center"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,2,3,2"/>
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="#00416a"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
